openapi: 3.0.0
info:
  title: OrgBook BC API
  description:
    OrgBook BC is a public, searchable directory of digital records for
    registered businesses in the Province of British Columbia. Over time, other
    government organizations and businesses will also begin to issue digital
    records through OrgBook BC. For example, permits and licenses issued by
    various government services.
  termsOfService: https://www2.gov.bc.ca/gov/content/data/open-data
  contact:
    email: bcdevexchange@gov.bc.ca
  license:
    name: Open Government License - British Columbia
    url: https://www2.gov.bc.ca/gov/content/data/open-data/api-terms-of-use-for-ogl-information
  version: v2
security:
  - basic: []
paths:
  /v2/address:
    get:
      operationId: v2_address_list
      description: ""
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Address"
      tags:
        - v2
    parameters: []
  "/v2/address/{id}":
    get:
      operationId: v2_address_read
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Address"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this address.
        required: true
        schema:
          type: integer
  /v2/attribute:
    get:
      operationId: v2_attribute_list
      description: ""
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Attribute"
      tags:
        - v2
    parameters: []
  "/v2/attribute/{id}":
    get:
      operationId: v2_attribute_read
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attribute"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this attribute.
        required: true
        schema:
          type: integer
  /v2/credential:
    get:
      operationId: v2_credential_list
      description: ""
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Credential"
      tags:
        - v2
    parameters: []
  /v2/credential/active:
    get:
      operationId: v2_credential_list_active
      description: ""
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Credential"
      tags:
        - v2
    parameters: []
  /v2/credential/historical:
    get:
      operationId: v2_credential_list_historical
      description: ""
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Credential"
      tags:
        - v2
    parameters: []
  "/v2/credential/{id}":
    get:
      operationId: v2_credential_read
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credential"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this credential.
        required: true
        schema:
          type: integer
  "/v2/credential/{id}/formatted":
    get:
      operationId: v2_credential_retrieve_formatted
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credential"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this credential.
        required: true
        schema:
          type: integer
  "/v2/credential/{id}/latest":
    get:
      operationId: v2_credential_get_latest
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credential"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this credential.
        required: true
        schema:
          type: integer
  /v2/credentialtype:
    get:
      operationId: v2_credentialtype_list
      description: ""
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/CredentialType"
      tags:
        - v2
    parameters: []
  "/v2/credentialtype/{id}":
    get:
      operationId: v2_credentialtype_read
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CredentialType"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this credential type.
        required: true
        schema:
          type: integer
  "/v2/credentialtype/{id}/logo":
    get:
      operationId: v2_credentialtype_fetch_logo
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CredentialType"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this credential type.
        required: true
        schema:
          type: integer
  /v2/feedback:
    post:
      operationId: v2_feedback_create
      description: ""
      requestBody:
        $ref: "#/components/requestBodies/v2_feedback_create"
      responses:
        "201":
          description: ""
      tags:
        - v2
    parameters: []
  "/v2/feedback{format}":
    post:
      operationId: v2_create
      description: ""
      requestBody:
        $ref: "#/components/requestBodies/v2_feedback_create"
      responses:
        "201":
          description: ""
      tags:
        - v2
    parameters:
      - name: format
        in: path
        required: true
        schema:
          type: string
  /v2/issuer:
    get:
      operationId: v2_issuer_list
      description: ""
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Issuer"
      tags:
        - v2
    parameters: []
  "/v2/issuer/{id}":
    get:
      operationId: v2_issuer_read
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Issuer"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this issuer.
        required: true
        schema:
          type: integer
  "/v2/issuer/{id}/credentialtype":
    get:
      operationId: v2_issuer_list_credential_types
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Issuer"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this issuer.
        required: true
        schema:
          type: integer
  "/v2/issuer/{id}/logo":
    get:
      operationId: v2_issuer_fetch_logo
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Issuer"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this issuer.
        required: true
        schema:
          type: integer
  /v2/name:
    get:
      operationId: v2_name_list
      description: ""
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Name"
      tags:
        - v2
    parameters: []
  "/v2/name/{id}":
    get:
      operationId: v2_name_read
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Name"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this name.
        required: true
        schema:
          type: integer
  /v2/quickload:
    get:
      operationId: v2_quickload_list
      description: ""
      responses:
        "200":
          description: ""
      tags:
        - v2
    parameters: []
  "/v2/quickload{format}":
    get:
      operationId: v2_read
      description: ""
      responses:
        "200":
          description: ""
      tags:
        - v2
    parameters:
      - name: format
        in: path
        required: true
        schema:
          type: string
  /v2/schema:
    get:
      operationId: v2_schema_list
      description: ""
      parameters:
        - name: id
          in: query
          description: ""
          required: false
          schema:
            type: number
        - name: name
          in: query
          description: ""
          required: false
          schema:
            type: string
        - name: version
          in: query
          description: ""
          required: false
          schema:
            type: string
        - name: origin_did
          in: query
          description: ""
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Schema"
      tags:
        - v2
    parameters: []
  "/v2/schema/{id}":
    get:
      operationId: v2_schema_read
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schema"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this schema.
        required: true
        schema:
          type: integer
  /v2/search/autocomplete:
    get:
      operationId: v2_search_autocomplete_list
      description: Return autocomplete results for a query string
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: q
          in: query
          description: Query string
          schema:
            type: string
        - name: inactive
          in: query
          description: Show inactive credentials
          schema:
            type: string
            enum:
              - any
              - "false"
              - "true"
            default: any
        - name: latest
          in: query
          description: Show only latest credentials
          schema:
            type: string
            enum:
              - any
              - "false"
              - "true"
            default: "true"
        - name: revoked
          in: query
          description: Show revoked credentials
          schema:
            type: string
            enum:
              - any
              - "false"
              - "true"
            default: "false"
        - name: category
          in: query
          description:
            Filter by credential category. The category name and value should be
            joined by '::'
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CredentialAutocomplete"
      tags:
        - v2
    parameters: []
  "/v2/search/autocomplete/{id}":
    get:
      operationId: v2_search_autocomplete_read
      description: Return autocomplete results for a query string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CredentialAutocomplete"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /v2/search/credential:
    get:
      operationId: v2_search_credential_list
      description:
        Provide credential search via Solr with both faceted (/facets) and
        unfaceted results
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
        - name: name
          in: query
          description: Filter credentials by related name or topic source ID
          schema:
            type: string
        - name: inactive
          in: query
          description: Show inactive credentials
          schema:
            type: string
            enum:
              - any
              - "false"
              - "true"
            default: "false"
        - name: latest
          in: query
          description: Show only latest credentials
          schema:
            type: string
            enum:
              - any
              - "false"
              - "true"
            default: "true"
        - name: revoked
          in: query
          description: Show revoked credentials
          schema:
            type: string
            enum:
              - any
              - "false"
              - "true"
            default: "false"
        - name: category
          in: query
          description:
            Filter by credential category. The category name and value should be
            joined by '::'
          schema:
            type: string
        - name: credential_type_id
          in: query
          description: Filter by Credential Type ID
          schema:
            type: string
        - name: issuer_id
          in: query
          description: Filter by Issuer ID
          schema:
            type: string
        - name: topic_id
          in: query
          description: Filter by Topic ID
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/CredentialSearch"
      tags:
        - v2
    parameters: []
  /v2/search/credential/facets:
    get:
      operationId: v2_search_credential_facets
      description: We want facet_counts from the less-restricted queryset
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/CredentialSearch"
      tags:
        - v2
    parameters: []
  /v2/search/credential/topic:
    get:
      operationId: v2_search_credential_topic_list
      description: ""
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
        - name: name
          in: query
          description: Filter credentials by related name or topic source ID
          schema:
            type: string
        - name: inactive
          in: query
          description: Show inactive credentials
          schema:
            type: string
            enum:
              - any
              - "false"
              - "true"
            default: "false"
        - name: latest
          in: query
          description: Show only latest credentials
          schema:
            type: string
            enum:
              - any
              - "false"
              - "true"
            default: "true"
        - name: revoked
          in: query
          description: Show revoked credentials
          schema:
            type: string
            enum:
              - any
              - "false"
              - "true"
            default: "false"
        - name: category
          in: query
          description:
            Filter by credential category. The category name and value should be
            joined by '::'
          schema:
            type: string
        - name: credential_type_id
          in: query
          description: Filter by Credential Type ID
          schema:
            type: string
        - name: issuer_id
          in: query
          description: Filter by Issuer ID
          schema:
            type: string
        - name: topic_id
          in: query
          description: Filter by Topic ID
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/CredentialTopicSearch"
      tags:
        - v2
    parameters: []
  /v2/search/credential/topic/facets:
    get:
      operationId: v2_search_credential_topic_facets
      description: We want facet_counts from the less-restricted queryset
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/CredentialTopicSearch"
      tags:
        - v2
    parameters: []
  "/v2/search/credential/topic/{id}":
    get:
      operationId: v2_search_credential_topic_read
      description: ""
      parameters:
        - name: name
          in: query
          description: Filter credentials by related name or topic source ID
          schema:
            type: string
        - name: inactive
          in: query
          description: Show inactive credentials
          schema:
            type: string
            enum:
              - any
              - "false"
              - "true"
            default: "false"
        - name: latest
          in: query
          description: Show only latest credentials
          schema:
            type: string
            enum:
              - any
              - "false"
              - "true"
            default: "true"
        - name: revoked
          in: query
          description: Show revoked credentials
          schema:
            type: string
            enum:
              - any
              - "false"
              - "true"
            default: "false"
        - name: category
          in: query
          description:
            Filter by credential category. The category name and value should be
            joined by '::'
          schema:
            type: string
        - name: credential_type_id
          in: query
          description: Filter by Credential Type ID
          schema:
            type: string
        - name: issuer_id
          in: query
          description: Filter by Issuer ID
          schema:
            type: string
        - name: topic_id
          in: query
          description: Filter by Topic ID
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CredentialTopicSearch"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/v2/search/credential/{id}":
    get:
      operationId: v2_search_credential_read
      description:
        Provide credential search via Solr with both faceted (/facets) and
        unfaceted results
      parameters:
        - name: name
          in: query
          description: Filter credentials by related name or topic source ID
          schema:
            type: string
        - name: inactive
          in: query
          description: Show inactive credentials
          schema:
            type: string
            enum:
              - any
              - "false"
              - "true"
            default: "false"
        - name: latest
          in: query
          description: Show only latest credentials
          schema:
            type: string
            enum:
              - any
              - "false"
              - "true"
            default: "true"
        - name: revoked
          in: query
          description: Show revoked credentials
          schema:
            type: string
            enum:
              - any
              - "false"
              - "true"
            default: "false"
        - name: category
          in: query
          description:
            Filter by credential category. The category name and value should be
            joined by '::'
          schema:
            type: string
        - name: credential_type_id
          in: query
          description: Filter by Credential Type ID
          schema:
            type: string
        - name: issuer_id
          in: query
          description: Filter by Issuer ID
          schema:
            type: string
        - name: topic_id
          in: query
          description: Filter by Topic ID
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CredentialSearch"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  /v2/topic:
    get:
      operationId: v2_topic_list
      description: ""
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Topic"
      tags:
        - v2
    parameters: []
  "/v2/topic/ident/{type}/{source_id}":
    get:
      operationId: v2_topic_retrieve_by_type
      description: ""
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Topic"
      tags:
        - v2
    parameters:
      - name: source_id
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: path
        required: true
        schema:
          type: string
  "/v2/topic/ident/{type}/{source_id}/formatted":
    get:
      operationId: v2_topic_ident_retrieve_by_type_formatted
      description: ""
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Topic"
      tags:
        - v2
    parameters:
      - name: source_id
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: path
        required: true
        schema:
          type: string
  "/v2/topic/{id}":
    get:
      operationId: v2_topic_read
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this topic.
        required: true
        schema:
          type: integer
  "/v2/topic/{id}/credential":
    get:
      operationId: v2_topic_list_credentials
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this topic.
        required: true
        schema:
          type: integer
  "/v2/topic/{id}/credential/active":
    get:
      operationId: v2_topic_credential_list_active_credentials
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this topic.
        required: true
        schema:
          type: integer
  "/v2/topic/{id}/credential/historical":
    get:
      operationId: v2_topic_credential_list_historical_credentials
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this topic.
        required: true
        schema:
          type: integer
  "/v2/topic/{id}/credentialset":
    get:
      operationId: v2_topic_list_credential_sets
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this topic.
        required: true
        schema:
          type: integer
  "/v2/topic/{id}/formatted":
    get:
      operationId: v2_topic_retrieve_formatted
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this topic.
        required: true
        schema:
          type: integer
  "/v2/topic/{id}/related_from":
    get:
      operationId: v2_topic_list_related_from
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this topic.
        required: true
        schema:
          type: integer
  "/v2/topic/{id}/related_to":
    get:
      operationId: v2_topic_list_related_to
      description: ""
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topic"
      tags:
        - v2
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this topic.
        required: true
        schema:
          type: integer
  "/indy/construct-proof":
    post:
      operationId: indy_construct_proof
      description: >-
        Constructs a proof given a proof request

        ```json

        {
            "proof_request": <HL Indy proof request>
        }

        ```

        returns: HL Indy proof data

      responses:
        "200":
          description: OK
      tags:
        - indy

  "/indy/generate-credential-request":
    post:
      operationId: indy_generate_credential_request
      description: >-
        Processes a credential definition and responds with a credential request
        which can then be used to submit a credential.

        Example request payload:

        ```json

        {
            'credential_offer': <credential offer json>,
            'credential_definition': <credential definition json>
        }

        ```

        returns:

        ```json

        {
            "credential_request": <credential request json>,
            "credential_request_metadata": <credential request metadata json>
        }

        ```

      responses:
        "200":
          description: OK
      tags:
        - indy

  "/indy/store-credential":
    post:
      operationId: indy_store_credential
      description: >-
        Stores one or more verifiable credentials in the wallet.

        The data in the credential is parsed and stored in the database
        for search/display purposes based on the issuer's processor config.
        The data is then made available through a REST API as well as a
        search API.

        Example request payload:

        ```json

        {
            "credential_data": <credential data>,
            "credential_request_metadata": <credential request metadata>
        }

        ```

        Input may also be in the form of an array of credential data:

        ```json

        [
            {
                "credential_data": <credential data>,
                "credential_request_metadata": <credential request metadata>
            },
            {
                "credential_data": <credential data>,
                "credential_request_metadata": <credential request metadata>
            }
        ]

        ```

        Returns: the wallet ID of the stored credential or credentials
      responses:
        "200":
          description: OK
      tags:
        - indy

  "/indy/register-issuer":
    post:
      operationId: indy_register_issuer
      description: >-
        Processes an issuer definition and creates or updates the
        corresponding records. Responds with the updated issuer
        definition including record IDs.

        Example request payload:

        ```json

        {
            "issuer": {
                "did": "6qnvgJtqwK44D8LFYnV5Yf", // required
                "name": "BC Corporate Registry", // required
                "abbreviation": "BCReg",
                "email": "bcreg.test.issuer@example.ca",
                "url": "http://localhost:5000"
            },
            "credential_types": [
                {
                "name": "Incorporation",
                "schema": "incorporation.bc_registries",
                "version": "1.0.31",
                "endpoint": "http://localhost:5000/bcreg/incorporation",
                "topic": {
                    "source_id": {
                        "input": "corp_num",
                        "from": "claim"
                    },
                    "type": {
                        "input": "incorporation",
                        "from": "value"
                    }
                },
                "mapping": [
                    {
                    "model": "name",
                    "fields": {
                        "text": {
                            "input": "legal_name",
                            "from": "claim"
                        },
                        "type": {
                            "input": "legal_name",
                            "from": "value"
                        }
                    }
                    }
                ]
                },
                {
                "name": "Doing Business As",
                "schema": "doing_business_as.bc_registries",
                "version": "1.0.31",
                "endpoint": "http://localhost:5000/bcreg/dba",
                "topic": {
                    "parent_source_id": {
                        "input": "org_registry_id",
                        "from": "claim"
                    },
                    "parent_type": {
                        "input": "incorporation",
                        "from": "value"
                    },
                    "source_id": {
                        "input": "dba_corp_num",
                        "from": "claim"
                    },
                    "type": {
                        "input": "doing_business_as",
                        "from": "value"
                    }
                },
                "mapping": [
                    {
                    "model": "name",
                    "fields": {
                        "text": {
                            "input": "dba_name",
                            "from": "claim"
                        },
                        "type": {
                            "input": "dba_name",
                            "from": "value"
                        }
                    }
                    }
                ]
                },
                {
                "name": "Corporate Address",
                "schema": "address.bc_registries",
                "version": "1.0.31",
                "endpoint": "http://localhost:5000/bcreg/address",
                "topic": [
                    {
                        "parent_source_id": {
                            "input": "org_registry_id",
                            "from": "claim"
                        },
                        "parent_type": {
                            "input": "incorporation",
                            "from": "value"
                        },
                        "source_id": {
                            "input": "dba_corp_num",
                            "from": "claim"
                        },
                        "type": {
                            "input": "doing_business_as",
                            "from": "value"
                        }
                    },
                    {
                        "source_id": {
                            "input": "org_registry_id",
                            "from": "claim"
                        },
                        "type": {
                            "input": "incorporation",
                            "from": "value"
                        }
                    }
                ],
                "cardinality_fields": ["addr_type"],
                "mapping": [
                    {
                        "model": "address",
                        "fields": {
                            "addressee": {
                                "input": "addressee",
                                "from": "claim"
                            },
                            "civic_address": {
                                "input": "local_address",
                                "from": "claim"
                            },
                            "city": {
                                "input": "municipality",
                                "from": "claim"
                            },
                            "province": {
                                "input": "province",
                                "from": "claim"
                            },
                            "postal_code": {
                                "input": "postal_code",
                                "from": "claim",
                                "processor": ["string_helpers.uppercase"]
                            },
                            "country": {
                                "input": "country",
                                "from": "claim"
                            },
                            "type": {
                                "input": "addr_type",
                                "from": "claim"
                            },
                            "end_date": {
                                "input": "end_date",
                                "from": "claim"
                            }
                        }
                    }
                ]
                }
            ]
            }

        ```

        returns:

        ```json

        {
            "success": true,
            "result": {
                "issuer": {
                    "id": 1,
                    "did": "6qnvgJtqwK44D8LFYnV5Yf",
                    "name": "BC Corporate Registry",
                    "abbreviation": "BCReg",
                    "email": "bcreg.test.issuer@example.ca",
                    "url": "http://localhost:5000"
                },
                "schemas": [
                    {
                        "id": 1,
                        "name": "incorporation.bc_registries",
                        "version": "1.0.31",
                        "origin_did": "6qnvgJtqwK44D8LFYnV5Yf"
                    },
                    {
                        "id": 2,
                        "name": "doing_business_as.bc_registries",
                        "version": "1.0.31",
                        "origin_did": "6qnvgJtqwK44D8LFYnV5Yf"
                    }
                ],
                "credential_types": [
                    {
                        "id": 1,
                        "schema_id": 1,
                        "issuer_id": 1,
                        "description": "Incorporation",
                        "processor_config": null
                    },
                    {
                        "id": 2,
                        "schema_id": 2,
                        "issuer_id": 1,
                        "description": "Doing Business As",
                        "processor_config": null
                    }
                ]
            }
        }

        ```

      responses:
        "200":
          description: OK
      tags:
        - indy

  "/indy/status":
    get:
      operationId: indy_status
      description: >-
        Return status of the Indy service including statistics on the requests performed
      responses:
        "200":
          description: OK
      tags:
        - indy

servers:
  - url: https://orgbook.gov.bc.ca:443/api
components:
  requestBodies:
    v2_feedback_create:
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              from_name:
                description: Sender name
                type: string
              from_email:
                description: Sender email address
                type: string
                format: email
              comments:
                description: Comments
                type: string
  securitySchemes:
    basic:
      type: http
      scheme: basic
  schemas:
    Address:
      required:
        - credential
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        create_timestamp:
          title: Create timestamp
          type: string
          format: date-time
          readOnly: true
        update_timestamp:
          title: Update timestamp
          type: string
          format: date-time
          readOnly: true
        addressee:
          title: Addressee
          type: string
          minLength: 1
          nullable: true
        civic_address:
          title: Civic address
          type: string
          minLength: 1
          nullable: true
        city:
          title: City
          type: string
          minLength: 1
          nullable: true
        province:
          title: Province
          type: string
          minLength: 1
          nullable: true
        postal_code:
          title: Postal code
          type: string
          minLength: 1
          nullable: true
        country:
          title: Country
          type: string
          minLength: 1
          nullable: true
        credential:
          title: Credential
          type: integer
    Attribute:
      required:
        - credential
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        create_timestamp:
          title: Create timestamp
          type: string
          format: date-time
          readOnly: true
        update_timestamp:
          title: Update timestamp
          type: string
          format: date-time
          readOnly: true
        type:
          title: Type
          type: string
          default: text
          minLength: 1
        format:
          title: Format
          type: string
          minLength: 1
          nullable: true
        value:
          title: Value
          type: string
          minLength: 1
          nullable: true
        credential:
          title: Credential
          type: integer
    Credential:
      required:
        - wallet_id
        - topic
        - credential_type
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        create_timestamp:
          title: Create timestamp
          type: string
          format: date-time
          readOnly: true
        update_timestamp:
          title: Update timestamp
          type: string
          format: date-time
          readOnly: true
        wallet_id:
          title: Wallet id
          type: string
          minLength: 1
        credential_def_id:
          title: Credential def id
          type: string
          minLength: 1
          nullable: true
        cardinality_hash:
          title: Cardinality hash
          type: string
          minLength: 1
          nullable: true
        effective_date:
          title: Effective date
          type: string
          format: date-time
        inactive:
          title: Inactive
          type: boolean
        latest:
          title: Latest
          type: boolean
        revoked:
          title: Revoked
          type: boolean
        revoked_date:
          title: Revoked date
          type: string
          format: date-time
          nullable: true
        topic:
          title: Topic
          type: integer
        credential_set:
          title: Credential set
          type: integer
          nullable: true
        credential_type:
          title: Credential type
          type: integer
        revoked_by:
          title: Revoked by
          type: integer
          nullable: true
        related_topics:
          type: array
          items:
            type: integer
          readOnly: true
          uniqueItems: true
    Issuer:
      title: Issuer
      required:
        - did
        - name
        - abbreviation
        - email
        - url
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        has_logo:
          title: Has logo
          type: boolean
          readOnly: true
        create_timestamp:
          title: Create timestamp
          type: string
          format: date-time
          readOnly: true
        update_timestamp:
          title: Update timestamp
          type: string
          format: date-time
          readOnly: true
        did:
          title: Did
          type: string
          minLength: 1
        name:
          title: Name
          type: string
          minLength: 1
        abbreviation:
          title: Abbreviation
          type: string
          minLength: 1
        email:
          title: Email
          type: string
          minLength: 1
        url:
          title: Url
          type: string
          minLength: 1
    CredentialType:
      required:
        - issuer
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        issuer:
          $ref: "#/components/schemas/Issuer"
        has_logo:
          title: Has logo
          type: boolean
          readOnly: true
        create_timestamp:
          title: Create timestamp
          type: string
          format: date-time
          readOnly: true
        update_timestamp:
          title: Update timestamp
          type: string
          format: date-time
          readOnly: true
        description:
          title: Description
          type: string
          nullable: true
        credential_def_id:
          title: Credential def id
          type: string
          minLength: 1
          nullable: true
        last_issue_date:
          title: Last issue date
          type: string
          format: date-time
          nullable: true
        url:
          title: Url
          type: string
          nullable: true
        schema:
          required:
            - name
            - version
            - origin_did
          type: object
          properties:
            id:
              title: ID
              type: integer
              readOnly: true
            create_timestamp:
              title: Create timestamp
              type: string
              format: date-time
              readOnly: true
            update_timestamp:
              title: Update timestamp
              type: string
              format: date-time
              readOnly: true
            name:
              title: Name
              type: string
              minLength: 1
            version:
              title: Version
              type: string
              minLength: 1
            origin_did:
              title: Origin did
              type: string
              minLength: 1
          readOnly: true
    Name:
      required:
        - credential
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        create_timestamp:
          title: Create timestamp
          type: string
          format: date-time
          readOnly: true
        update_timestamp:
          title: Update timestamp
          type: string
          format: date-time
          readOnly: true
        text:
          title: Text
          type: string
          minLength: 1
          nullable: true
        language:
          title: Language
          type: string
          minLength: 1
          nullable: true
        credential:
          title: Credential
          type: integer
    Schema:
      required:
        - name
        - version
        - origin_did
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        create_timestamp:
          title: Create timestamp
          type: string
          format: date-time
          readOnly: true
        update_timestamp:
          title: Update timestamp
          type: string
          format: date-time
          readOnly: true
        name:
          title: Name
          type: string
          minLength: 1
        version:
          title: Version
          type: string
          minLength: 1
        origin_did:
          title: Origin did
          type: string
          minLength: 1
    CredentialName:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        text:
          title: Text
          type: string
          minLength: 1
          nullable: true
        language:
          title: Language
          type: string
          minLength: 1
          nullable: true
        credential_id:
          title: Credential id
          type: string
          readOnly: true
    CredentialAutocomplete:
      required:
        - names
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        names:
          type: array
          items:
            $ref: "#/components/schemas/CredentialName"
        inactive:
          title: Inactive
          type: boolean
    CredentialSet:
      title: Credential set
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        create_timestamp:
          title: Create timestamp
          type: string
          format: date-time
          readOnly: true
        update_timestamp:
          title: Update timestamp
          type: string
          format: date-time
          readOnly: true
        latest_credential_id:
          title: Latest credential id
          type: string
          readOnly: true
        topic_id:
          title: Topic id
          type: string
          readOnly: true
        first_effective_date:
          title: First effective date
          type: string
          format: date-time
          nullable: true
        last_effective_date:
          title: Last effective date
          type: string
          format: date-time
          nullable: true
    CredentialAddress:
      type: object
      properties:
        civic_address:
          title: Civic address
          type: string
          minLength: 1
          nullable: true
        update_timestamp:
          title: Update timestamp
          type: string
          format: date-time
          readOnly: true
        addressee:
          title: Addressee
          type: string
          minLength: 1
          nullable: true
        country:
          title: Country
          type: string
          minLength: 1
          nullable: true
        province:
          title: Province
          type: string
          minLength: 1
          nullable: true
        credential_id:
          title: Credential id
          type: string
          readOnly: true
        create_timestamp:
          title: Create timestamp
          type: string
          format: date-time
          readOnly: true
        id:
          title: ID
          type: integer
          readOnly: true
        postal_code:
          title: Postal code
          type: string
          minLength: 1
          nullable: true
        city:
          title: City
          type: string
          minLength: 1
          nullable: true
    CredentialAttribute:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        type:
          title: Type
          type: string
          minLength: 1
        format:
          title: Format
          type: string
          minLength: 1
          nullable: true
        value:
          title: Value
          type: string
          minLength: 1
          nullable: true
        credential_id:
          title: Credential id
          type: string
          readOnly: true
    CredentialTopic:
      title: Topic
      required:
        - source_id
        - type
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        create_timestamp:
          title: Create timestamp
          type: string
          format: date-time
          readOnly: true
        update_timestamp:
          title: Update timestamp
          type: string
          format: date-time
          readOnly: true
        source_id:
          title: Source id
          type: string
          minLength: 1
        type:
          title: Type
          type: string
          minLength: 1
    CredentialNamedTopic:
      required:
        - source_id
        - type
        - names
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        create_timestamp:
          title: Create timestamp
          type: string
          format: date-time
          readOnly: true
        update_timestamp:
          title: Update timestamp
          type: string
          format: date-time
          readOnly: true
        source_id:
          title: Source id
          type: string
          minLength: 1
        type:
          title: Type
          type: string
          minLength: 1
        names:
          type: array
          items:
            $ref: "#/components/schemas/CredentialName"
    CredentialSearch:
      required:
        - wallet_id
        - credential_set
        - credential_type
        - addresses
        - attributes
        - names
        - topic
        - related_topics
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        create_timestamp:
          title: Create timestamp
          type: string
          format: date-time
          readOnly: true
        update_timestamp:
          title: Update timestamp
          type: string
          format: date-time
          readOnly: true
        effective_date:
          title: Effective date
          type: string
          format: date-time
        inactive:
          title: Inactive
          type: boolean
        latest:
          title: Latest
          type: boolean
        revoked:
          title: Revoked
          type: boolean
        revoked_date:
          title: Revoked date
          type: string
          format: date-time
          nullable: true
        wallet_id:
          title: Wallet id
          type: string
          minLength: 1
        credential_set:
          $ref: "#/components/schemas/CredentialSet"
        credential_type:
          $ref: "#/components/schemas/CredentialType"
        addresses:
          type: array
          items:
            $ref: "#/components/schemas/CredentialAddress"
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/CredentialAttribute"
        names:
          type: array
          items:
            $ref: "#/components/schemas/CredentialName"
        topic:
          $ref: "#/components/schemas/CredentialTopic"
        related_topics:
          type: array
          items:
            $ref: "#/components/schemas/CredentialNamedTopic"
    CredentialTopicExt:
      title: Topic
      required:
        - source_id
        - type
        - names
        - addresses
        - attributes
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        create_timestamp:
          title: Create timestamp
          type: string
          format: date-time
          readOnly: true
        update_timestamp:
          title: Update timestamp
          type: string
          format: date-time
          readOnly: true
        source_id:
          title: Source id
          type: string
          minLength: 1
        type:
          title: Type
          type: string
          minLength: 1
        names:
          type: array
          items:
            $ref: "#/components/schemas/CredentialName"
        addresses:
          type: array
          items:
            $ref: "#/components/schemas/CredentialAddress"
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/CredentialAttribute"
    CredentialTopicSearch:
      required:
        - wallet_id
        - credential_set
        - credential_type
        - names
        - topic
        - related_topics
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        create_timestamp:
          title: Create timestamp
          type: string
          format: date-time
          readOnly: true
        update_timestamp:
          title: Update timestamp
          type: string
          format: date-time
          readOnly: true
        effective_date:
          title: Effective date
          type: string
          format: date-time
        inactive:
          title: Inactive
          type: boolean
        latest:
          title: Latest
          type: boolean
        revoked:
          title: Revoked
          type: boolean
        revoked_date:
          title: Revoked date
          type: string
          format: date-time
          nullable: true
        wallet_id:
          title: Wallet id
          type: string
          minLength: 1
        credential_set:
          $ref: "#/components/schemas/CredentialSet"
        credential_type:
          $ref: "#/components/schemas/CredentialType"
        names:
          type: array
          items:
            $ref: "#/components/schemas/CredentialName"
        topic:
          $ref: "#/components/schemas/CredentialTopicExt"
        related_topics:
          type: array
          items:
            $ref: "#/components/schemas/CredentialNamedTopic"
    Topic:
      required:
        - source_id
        - type
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        create_timestamp:
          title: Create timestamp
          type: string
          format: date-time
          readOnly: true
        update_timestamp:
          title: Update timestamp
          type: string
          format: date-time
          readOnly: true
        source_id:
          title: Source id
          type: string
          minLength: 1
        type:
          title: Type
          type: string
          minLength: 1
        related_to:
          type: array
          items:
            type: integer
          readOnly: true
          uniqueItems: true
        related_from:
          type: array
          items:
            type: integer
          readOnly: true
          uniqueItems: true
