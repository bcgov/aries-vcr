#!/usr/bin/env python

import os
import sys

ENABLE_PTVSD = os.getenv("ENABLE_PTVSD", "").lower()
ENABLE_PTVSD = ENABLE_PTVSD and ENABLE_PTVSD not in ("false", "0")

ENABLE_PYDEVD = os.getenv("ENABLE_PYDEVD", "").lower()
ENABLE_PYDEVD = ENABLE_PYDEVD and ENABLE_PYDEVD not in ("false", "0")

PYDEVD_PORT = os.getenv("PYDEVD_PORT", "").lower()



# --debug-vs to use microsoft's visual studio remote debugger
if ENABLE_PTVSD or "--debug-vs" in sys.argv:
    try:
        import ptvsd
        ptvsd.enable_attach()
        print("ptvsd is running")
        # To pause execution until the debugger is attached:
        # ptvsd.wait_for_attach()
    except ImportError as e:
        print("ptvsd library was not found")


# --debug to use pydevd remote debugging to attempt to connect to a debug server (IDE)
if ENABLE_PYDEVD or "--debug" in sys.argv:
    try:
        import pydevd as p
        print("pydevd is running")
        p.settrace('host.docker.internal', port=int(PYDEVD_PORT), suspend=False, stdoutToServer=True, stderrToServer=True)
    except ImportError as e:
        print("pydevd library was not found")




from indy_catalyst_agent import main
main()
