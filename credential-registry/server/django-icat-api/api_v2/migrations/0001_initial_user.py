# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-05-29 20:31
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('DID', models.TextField(blank=True, max_length=60, unique=True)),
                ('verkey', models.BinaryField(blank=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DoingBusinessAs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('dbaName', models.CharField(max_length=255)),
                ('effectiveDate', models.DateField(default=django.utils.timezone.now)),
                ('endDate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'DOING_BUSINESS_AS',
            },
        ),
        migrations.CreateModel(
            name='InactiveClaimReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('shortReason', models.CharField(blank=True, max_length=255, null=True)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('effectiveDate', models.DateField(default=django.utils.timezone.now)),
                ('endDate', models.DateField(blank=True, null=True)),
                ('displayOrder', models.IntegerField()),
            ],
            options={
                'db_table': 'INACTIVE_CLAIM_REASON',
            },
        ),
        migrations.CreateModel(
            name='IssuerService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('issuerOrgTLA', models.CharField(max_length=255)),
                ('issuerOrgURL', models.CharField(blank=True, max_length=255, null=True)),
                ('DID', models.CharField(max_length=255)),
                ('effectiveDate', models.DateField(default=django.utils.timezone.now)),
                ('endDate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ISSUER_SERVICE',
            },
        ),
        migrations.CreateModel(
            name='Jurisdiction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('abbrv', models.CharField(max_length=25)),
                ('name', models.CharField(max_length=1000)),
                ('displayOrder', models.IntegerField()),
                ('isOnCommonList', models.BooleanField()),
                ('effectiveDate', models.DateField(default=django.utils.timezone.now)),
                ('endDate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'JURISDICTION',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('addressee', models.CharField(blank=True, max_length=255, null=True)),
                ('addlDeliveryInfo', models.CharField(blank=True, max_length=255, null=True)),
                ('unitNumber', models.CharField(blank=True, max_length=255, null=True)),
                ('streetAddress', models.CharField(blank=True, max_length=255, null=True)),
                ('municipality', models.CharField(blank=True, max_length=255, null=True)),
                ('province', models.CharField(blank=True, max_length=255, null=True)),
                ('postalCode', models.CharField(blank=True, max_length=255, null=True)),
                ('latLong', models.CharField(blank=True, max_length=255, null=True)),
                ('effectiveDate', models.DateField(default=django.utils.timezone.now)),
                ('endDate', models.DateField(blank=True, null=True)),
                ('doingBusinessAsId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='api_v2.DoingBusinessAs')),
            ],
            options={
                'db_table': 'LOCATION',
            },
        ),
        migrations.CreateModel(
            name='LocationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('locType', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('effectiveDate', models.DateField(default=django.utils.timezone.now)),
                ('endDate', models.DateField(blank=True, null=True)),
                ('displayOrder', models.IntegerField()),
            ],
            options={
                'db_table': 'LOCATION_TYPE',
            },
        ),
        migrations.CreateModel(
            name='VerifiableClaim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('claimJSON', models.TextField(blank=True, null=True)),
                ('effectiveDate', models.DateField(default=django.utils.timezone.now)),
                ('endDate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'VERIFIABLE_CLAIM',
            },
        ),
        migrations.CreateModel(
            name='VerifiableClaimType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('claimType', models.CharField(max_length=255)),
                ('base64Logo', models.CharField(blank=True, max_length=255, null=True)),
                ('issuerURL', models.CharField(max_length=255)),
                ('effectiveDate', models.DateField(default=django.utils.timezone.now)),
                ('schemaName', models.CharField(blank=True, max_length=255, null=True)),
                ('schemaVersion', models.CharField(blank=True, max_length=255, null=True)),
                ('endDate', models.DateField(blank=True, null=True)),
                ('issuerServiceId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issuerServices', to='api_v2.IssuerService')),
            ],
            options={
                'db_table': 'VERIFIABLE_CLAIM_TYPE',
            },
        ),
        migrations.CreateModel(
            name='VerifiableOrg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('orgId', models.CharField(max_length=255)),
                ('legalName', models.CharField(max_length=255)),
                ('effectiveDate', models.DateField(default=django.utils.timezone.now)),
                ('endDate', models.DateField(blank=True, null=True)),
                ('jurisdictionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verifiableOrgJurisdictions', to='api_v2.Jurisdiction')),
            ],
            options={
                'db_table': 'VERIFIABLE_ORG',
            },
        ),
        migrations.CreateModel(
            name='VerifiableOrgType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('orgType', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('effectiveDate', models.DateField(default=django.utils.timezone.now)),
                ('endDate', models.DateField(blank=True, null=True)),
                ('displayOrder', models.IntegerField()),
            ],
            options={
                'db_table': 'VERIFIABLE_ORG_TYPE',
            },
        ),
        migrations.AddField(
            model_name='verifiableorg',
            name='orgTypeId',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='verifiableOrgTypes', to='api_v2.VerifiableOrgType'),
        ),
        migrations.AddField(
            model_name='verifiableclaim',
            name='claimType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='claimTypes', to='api_v2.VerifiableClaimType'),
        ),
        migrations.AddField(
            model_name='verifiableclaim',
            name='inactiveClaimReasonId',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inactiveClaimReasons', to='api_v2.InactiveClaimReason'),
        ),
        migrations.AddField(
            model_name='verifiableclaim',
            name='verifiableOrgId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='claims', to='api_v2.VerifiableOrg'),
        ),
        migrations.AddField(
            model_name='location',
            name='locationTypeId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locationTypes', to='api_v2.LocationType'),
        ),
        migrations.AddField(
            model_name='location',
            name='verifiableOrgId',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='api_v2.VerifiableOrg'),
        ),
        migrations.AddField(
            model_name='issuerservice',
            name='jurisdictionId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issuerServiceJurisdictions', to='api_v2.Jurisdiction'),
        ),
        migrations.AddField(
            model_name='doingbusinessas',
            name='verifiableOrgId',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doingBusinessAs', to='api_v2.VerifiableOrg'),
        ),
    ]
